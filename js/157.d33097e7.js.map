{"version":3,"file":"js/157.d33097e7.js","mappings":"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","sources":["webpack://vue22/./src/views/love/index.vue","webpack://vue22/src/views/love/index.vue","webpack://vue22/./src/views/love/index.vue?11b4","webpack://vue22/./src/views/love/index.vue?b8fa"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"love\"},[_c('canvas',{attrs:{\"id\":\"pinkboard\"}}),(_vm.name)?_c('div',{staticClass:\"love_you\"},[_vm._v(_vm._s(_vm.name))]):_vm._e(),(_vm.list.length > 0)?[(_vm.index < _vm.list.length && _vm.isShow)?_c('div',{staticClass:\"love_you\"},[_vm._v(\" \"+_vm._s(_vm.list[_vm.index])+\" \")]):_c('div',{staticClass:\"love_you love_you_list\"},_vm._l((_vm.list),function(item,index){return _c('div',{key:index},[_vm._v(\" \"+_vm._s(item)+\" \")])}),0)]:_vm._e()],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"love\">\n    <canvas id=\"pinkboard\"></canvas>\n\n    <div class=\"love_you\" v-if=\"name\">{{ name }}</div>\n\n    <template v-if=\"list.length > 0\">\n      <div class=\"love_you\" v-if=\"index < list.length && isShow\">\n        {{ list[index] }}\n      </div>\n      <div v-else class=\"love_you love_you_list\">\n        <div v-for=\"(item, index) in list\" :key=\"index\">\n          {{ item }}\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\nexport default {\n  components: {},\n  data() {\n    return {\n      name: '',\n      list: [],\n      type: '',\n      typeobj: {\n        '0000': '暂无此人',\n        1111: '狗仔',\n        1234: '云哥',\n        2345: '李书云',\n        11111: ['你若不嫌弃', '不知庭树意', '要醉对清凉', '脸横秋水溢'],\n        22222: [\n          '我欲万里寻觅你',\n          '喜忧如常也如是',\n          '欢愉苦短夜色白',\n          '你知我心为谁痴',\n        ],\n      },\n      index: 0,\n      time: null,\n      isShow: true,\n    };\n  },\n  created() {\n    // encodeURI('云')\n    this.type = this.$route.query.type;\n    if (this.type) {\n      if (this.type.length >= 5) {\n        this.list = this.typeobj[this.type];\n      } else {\n        this.name = this.typeobj[this.type];\n      }\n    } else {\n      let name = this.$route.query.name;\n      if (name.indexOf(',') !== -1) {\n        this.list = name.split(',');\n      } else {\n        this.name = name;\n      }\n    }\n    if (this.list.length > 0) {\n      this.time = setInterval(() => {\n        this.isShow = false;\n        this.index++;\n        this.isShow = true;\n        if (this.index >= this.list.length) {\n          clearInterval(this.time);\n        }\n      }, 2000);\n    }\n  },\n  computed: {},\n  watch: {},\n  mounted() {\n    /*\n     * Settings\n     */\n    var settings = {\n      particles: {\n        length: 500, // maximum amount of particles\n        duration: 2, // particle duration in sec\n        velocity: 100, // particle velocity in pixels/sec\n        effect: -0.75, // play with this for a nice effect\n        size: 30, // particle size in pixels\n      },\n    };\n\n    /*\n     * RequestAnimationFrame polyfill by Erik Möller\n     */\n    (function () {\n      var b = 0;\n      var c = ['ms', 'moz', 'webkit', 'o'];\n      for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n        window.requestAnimationFrame = window[c[a] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[c[a] + 'CancelAnimationFrame'] ||\n          window[c[a] + 'CancelRequestAnimationFrame'];\n      }\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function (h, e) {\n          var d = new Date().getTime();\n          var f = Math.max(0, 16 - (d - b));\n          var g = window.setTimeout(function () {\n            h(d + f);\n          }, f);\n          b = d + f;\n          return g;\n        };\n      }\n      if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function (d) {\n          clearTimeout(d);\n        };\n      }\n    })();\n\n    /*\n     * Point class\n     */\n    var Point = (function () {\n      function Point(x, y) {\n        this.x = typeof x !== 'undefined' ? x : 0;\n        this.y = typeof y !== 'undefined' ? y : 0;\n      }\n      Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n      };\n      Point.prototype.length = function (length) {\n        if (typeof length == 'undefined')\n          return Math.sqrt(this.x * this.x + this.y * this.y);\n        this.normalize();\n        this.x *= length;\n        this.y *= length;\n        return this;\n      };\n      Point.prototype.normalize = function () {\n        var length = this.length();\n        this.x /= length;\n        this.y /= length;\n        return this;\n      };\n      return Point;\n    })();\n\n    /*\n     * Particle class\n     */\n    var Particle = (function () {\n      function Particle() {\n        this.position = new Point();\n        this.velocity = new Point();\n        this.acceleration = new Point();\n        this.age = 0;\n      }\n      Particle.prototype.initialize = function (x, y, dx, dy) {\n        this.position.x = x;\n        this.position.y = y;\n        this.velocity.x = dx;\n        this.velocity.y = dy;\n        this.acceleration.x = dx * settings.particles.effect;\n        this.acceleration.y = dy * settings.particles.effect;\n        this.age = 0;\n      };\n      Particle.prototype.update = function (deltaTime) {\n        this.position.x += this.velocity.x * deltaTime;\n        this.position.y += this.velocity.y * deltaTime;\n        this.velocity.x += this.acceleration.x * deltaTime;\n        this.velocity.y += this.acceleration.y * deltaTime;\n        this.age += deltaTime;\n      };\n      Particle.prototype.draw = function (context, image) {\n        function ease(t) {\n          return --t * t * t + 1;\n        }\n        var size = image.width * ease(this.age / settings.particles.duration);\n        context.globalAlpha = 1 - this.age / settings.particles.duration;\n        context.drawImage(\n          image,\n          this.position.x - size / 2,\n          this.position.y - size / 2,\n          size,\n          size\n        );\n      };\n      return Particle;\n    })();\n\n    /*\n     * ParticlePool class\n     */\n    var ParticlePool = (function () {\n      var particles,\n        firstActive = 0,\n        firstFree = 0,\n        duration = settings.particles.duration;\n\n      function ParticlePool(length) {\n        // create and populate particle pool\n        particles = new Array(length);\n        for (var i = 0; i < particles.length; i++)\n          particles[i] = new Particle();\n      }\n      ParticlePool.prototype.add = function (x, y, dx, dy) {\n        particles[firstFree].initialize(x, y, dx, dy);\n\n        // handle circular queue\n        firstFree++;\n        if (firstFree == particles.length) firstFree = 0;\n        if (firstActive == firstFree) firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      };\n      ParticlePool.prototype.update = function (deltaTime) {\n        var i;\n\n        // update active particles\n        if (firstActive < firstFree) {\n          for (i = firstActive; i < firstFree; i++)\n            particles[i].update(deltaTime);\n        }\n        if (firstFree < firstActive) {\n          for (i = firstActive; i < particles.length; i++)\n            particles[i].update(deltaTime);\n          for (i = 0; i < firstFree; i++) particles[i].update(deltaTime);\n        }\n\n        // remove inactive particles\n        while (\n          particles[firstActive].age >= duration &&\n          firstActive != firstFree\n        ) {\n          firstActive++;\n          if (firstActive == particles.length) firstActive = 0;\n        }\n      };\n      ParticlePool.prototype.draw = function (context, image) {\n        var i;\n        // draw active particles\n        if (firstActive < firstFree) {\n          for (i = firstActive; i < firstFree; i++)\n            particles[i].draw(context, image);\n        }\n        if (firstFree < firstActive) {\n          for (i = firstActive; i < particles.length; i++)\n            particles[i].draw(context, image);\n          for (i = 0; i < firstFree; i++) particles[i].draw(context, image);\n        }\n      };\n      return ParticlePool;\n    })();\n\n    /*\n     * Putting it all together\n     */\n    (function (canvas) {\n      var context = canvas.getContext('2d'),\n        particles = new ParticlePool(settings.particles.length),\n        particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n        time;\n\n      // get point on heart with -PI <= t <= PI\n      function pointOnHeart(t) {\n        return new Point(\n          160 * Math.pow(Math.sin(t), 3),\n          130 * Math.cos(t) -\n            50 * Math.cos(2 * t) -\n            20 * Math.cos(3 * t) -\n            10 * Math.cos(4 * t) +\n            25\n        );\n      }\n\n      // creating the particle image using a dummy canvas\n      var image = (function () {\n        var canvas = document.createElement('canvas'),\n          context = canvas.getContext('2d');\n        canvas.width = settings.particles.size;\n        canvas.height = settings.particles.size;\n        // helper function to create the path\n        function to(t) {\n          var point = pointOnHeart(t);\n          point.x =\n            settings.particles.size / 2 +\n            (point.x * settings.particles.size) / 350;\n          point.y =\n            settings.particles.size / 2 -\n            (point.y * settings.particles.size) / 350;\n          return point;\n        }\n        // create the path\n        context.beginPath();\n        var t = -Math.PI;\n        var point = to(t);\n        context.moveTo(point.x, point.y);\n        while (t < Math.PI) {\n          t += 0.01; // baby steps!\n          point = to(t);\n          context.lineTo(point.x, point.y);\n        }\n        context.closePath();\n        // create the fill\n        context.fillStyle = '#ea80b0';\n        context.fill();\n        // create the image\n        var image = new Image();\n        image.src = canvas.toDataURL();\n        return image;\n      })();\n\n      // render that thing!\n      function render() {\n        // next animation frame\n        requestAnimationFrame(render);\n\n        // update time\n        var newTime = new Date().getTime() / 1000,\n          deltaTime = newTime - (time || newTime);\n        time = newTime;\n\n        // clear canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // create new particles\n        var amount = particleRate * deltaTime;\n        for (var i = 0; i < amount; i++) {\n          var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n          var dir = pos.clone().length(settings.particles.velocity);\n          particles.add(\n            canvas.width / 2 + pos.x,\n            canvas.height / 2 - pos.y,\n            dir.x,\n            -dir.y\n          );\n        }\n\n        // update and draw particles\n        particles.update(deltaTime);\n        particles.draw(context, image);\n      }\n\n      // handle (re-)sizing of the canvas\n      function onResize() {\n        canvas.width = canvas.clientWidth;\n        canvas.height = canvas.clientHeight;\n      }\n      window.onresize = onResize;\n\n      // delay rendering bootstrap\n      setTimeout(function () {\n        onResize();\n        render();\n      }, 10);\n    })(document.getElementById('pinkboard'));\n  },\n  methods: {},\n};\n</script>\n<style lang=\"scss\" scoped>\n.love {\n  width: 100%;\n  height: 100%;\n  background: #000;\n}\ncanvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.love_you {\n  position: absolute;\n  left: 50%;\n  z-index: 999;\n  top: 45%;\n  transform: translateX(-50%);\n  font-size: 1.3rem;\n  font-weight: bold;\n  color: #ffc0cb;\n  letter-spacing: 0.05rem;\n  animation: love-xf 1.2s alternate ease-in-out;\n  user-select: none;\n  text-shadow: 0 0 8px #fff;\n}\n.love_you_list {\n  top: 40%;\n}\n@keyframes love-xf {\n  0% {\n    opacity: 0.08;\n    filter: blur(8px);\n    letter-spacing: 0.1rem;\n  }\n\n  100% {\n    opacity: 1;\n    filter: blur(0);\n    letter-spacing: 0.05rem;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=536c9b2c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=536c9b2c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"536c9b2c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","name","_v","_s","_e","list","length","index","isShow","_l","item","key","staticRenderFns","components","data","type","typeobj","time","created","clearInterval","computed","watch","mounted","particles","duration","velocity","effect","size","window","h","b","clearTimeout","Point","Particle","context","image","firstActive","firstFree","ParticlePool","particleRate","point","settings","canvas","t","requestAnimationFrame","deltaTime","dir","setTimeout","onResize","methods","component"],"sourceRoot":""}